{"version":3,"sources":["webpack:///./src/app/architecturalComponents/browserComponent.tsx","webpack:///./src/app/architecturalComponents/visitorComponent.tsx","webpack:///./src/app/architecturalComponents/componentMap.ts","webpack:///./src/app/architecturalComponents/helpers.ts","webpack:///./src/app/architecturalComponents/visitorRequestProcessingLinks.tsx","webpack:///./src/app/architecturalComponents/linkMap.ts","webpack:///./src/app/components/AcDocumentation/AcDocumentation.tsx","webpack:///./src/app/components/App/App.module.scss?4463","webpack:///./src/app/components/App/App.tsx","webpack:///./src/app/components/LeftNav/LeftNav.tsx","webpack:///./src/app/components/LoadingSpinner/LoadingSpinner.module.scss?2525","webpack:///./src/app/components/LoadingSpinner/LoadingSpinner.tsx","webpack:///./src/app/helpers/loadableDefaultOptions.tsx","webpack:///./src/app/index.tsx","webpack:///./src/app/pages/Home/LoadableHome.tsx","webpack:///./src/app/pages/VisitorRequestProcessing/LoadableVisitorRequestProcessing.tsx","webpack:///./src/app/store/actions.ts","webpack:///./src/app/store/createConfiguredStore.ts","webpack:///./src/app/store/helpers.ts","webpack:///./src/app/store/reducer.ts","webpack:///./src/app/store/reducers.ts"],"names":["browserComponent","id","name","Documentation","react_default","a","createElement","AcDocumentation","title","visitorComponent","componentMap","convertToVisNode","_ref","label","borderWidth","borderWidthSelected","color","background","highlight","convertToVisEdge","link","to","from","rest","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","enhanceLink","visitorRequestProcessing","visitor-browser","Object","helpers","Fragment","reactstrap_es","arrows","linkMap","react_redux__WEBPACK_IMPORTED_MODULE_6__","undefined","setSelectedItem","store_actions__WEBPACK_IMPORTED_MODULE_8__","_React$Component","_class","_this","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default","this","handleCloseButton","props","_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default","_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default","key","value","react__WEBPACK_IMPORTED_MODULE_5___default","reactstrap__WEBPACK_IMPORTED_MODULE_7__","type","className","aria-label","onClick","aria-hidden","children","Component","module","exports","root","leftNav","content","App","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default","__proto__","_babel_runtime_core_js_object_get_prototype_of__WEBPACK_IMPORTED_MODULE_0___default","apply","arguments","classcat__WEBPACK_IMPORTED_MODULE_7__","_App_module_scss__WEBPACK_IMPORTED_MODULE_14___default","react_helmet_async__WEBPACK_IMPORTED_MODULE_8___default","titleTemplate","defaultTitle","charSet","reactstrap__WEBPACK_IMPORTED_MODULE_12__","sm","size","components_LeftNav_LeftNav__WEBPACK_IMPORTED_MODULE_13__","react_router__WEBPACK_IMPORTED_MODULE_9__","path","component","pages_VisitorRequestProcessing_LoadableVisitorRequestProcessing__WEBPACK_IMPORTED_MODULE_11__","pages_Home_LoadableHome__WEBPACK_IMPORTED_MODULE_10__","HotApp","react_hot_loader__WEBPACK_IMPORTED_MODULE_6__","LeftNav","react_redux__WEBPACK_IMPORTED_MODULE_7__","state","selectedArchitectureItem","store_reducers__WEBPACK_IMPORTED_MODULE_9__","getSelectedItem","_this$props$selectedA","itemId","architecture","lodash_find__WEBPACK_IMPORTED_MODULE_5__","architecturalComponents_componentMap__WEBPACK_IMPORTED_MODULE_10__","architecturalComponents_linkMap__WEBPACK_IMPORTED_MODULE_11__","renderLinks","react__WEBPACK_IMPORTED_MODULE_6___default","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","selectedItem","loaderCircular","loaderPath","loaderDash","LoadingSpinner_LoadingSpinner","_ref$size","objectWithoutProperties_default","LoadingSpinner_module_default","extends_default","height","width","viewBox","cx","cy","r","fill","strokeWidth","strokeMiterlimit","loadableDefaultOptions","loading","pastDelay","delay","history","history_createBrowserHistory__WEBPACK_IMPORTED_MODULE_10___default","store","store_createConfiguredStore__WEBPACK_IMPORTED_MODULE_12__","Root","_React$PureComponent","react_helmet_async__WEBPACK_IMPORTED_MODULE_13__","react_router_redux__WEBPACK_IMPORTED_MODULE_7__","components_App_App__WEBPACK_IMPORTED_MODULE_11__","PureComponent","renderApp","react_dom__WEBPACK_IMPORTED_MODULE_9__","document","getElementById","domready__WEBPACK_IMPORTED_MODULE_8___default","renderOnDomReady","LoadableHome","react_loadable__WEBPACK_IMPORTED_MODULE_4___default","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_3___default","helpers_loadableDefaultOptions__WEBPACK_IMPORTED_MODULE_5__","loader","_loader","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","next","abrupt","__webpack_require__","e","then","bind","Home","stop","LoadableVisitorRequestProcessing","Promise","all","VisitorRequestProcessing","store_helpers__WEBPACK_IMPORTED_MODULE_0__","defaultInitialState","routing","location","createConfiguredStore","_ref$initialState","initialState","composeEnhancers","redux__WEBPACK_IMPORTED_MODULE_1__","global","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","middlewares","react_router_redux__WEBPACK_IMPORTED_MODULE_0__","_reducer__WEBPACK_IMPORTED_MODULE_2__","createActionCreator","payload","createAction","createReducerForStoreKey","map","defaultState","action","reducer","isActionOfType","appReducers","redux__WEBPACK_IMPORTED_MODULE_2__","react_router_redux__WEBPACK_IMPORTED_MODULE_1__","selectedArchitectureItemReducer","SET_SELECTED_ARCHITECTURE_ITEM","getSelectedArchitectureItem"],"mappings":"iQAK6BA,GACzBC,GAAW,UACTC,KAAW,UACFC,cAAO,WACX,OACLC,EAAAC,EAAAC,cAAgBC,EAAA,GAAMC,MACpB,eAKAJ,EAAAC,EAAAC,cAAA,kGACkEF,EAAAC,EAAAC,cAAA,4EAChE,IAAYF,EAAAC,EAAAC,cAAA,qBAA4B,qGAI1CF,EAAAC,EAAAC,cAAA,+BACEF,EAAAC,EAAAC,cAAA,iCAGFF,EAAAC,EAAAC,cAAA,wCACEF,EAAAC,EAAAC,cAAA,UAKAF,EAAAC,EAAAC,cAAA,+GACEF,EAAAC,EAAAC,cAAA,+BAA8BF,EAAAC,EAAAC,cAAA,qBAKxC,iCCjC2BG,GACzBR,GAAW,UACTC,KAAW,UACFC,cAAO,WACX,OACLC,EAAAC,EAAAC,cAAgBC,EAAA,GAAMC,MACpB,gDAAiCJ,EAAAC,EAAAC,cAAA,oBAIvC,sGCZK,IAAkBI,GACPV,mBAEhBS,qZCEI,SAA2BE,EAAAC,GAAA,IAC3BV,EAAAU,EAAAV,KAGJ,OACID,GAFmBW,EAAAX,GAGhBY,MAAMX,EACAY,YAAG,EACKC,oBAAG,EACjBC,OACOC,WAAS,QACVC,UAGf,YAEM,SAAAC,EAAqCC,GAAA,IAC/BC,EAA+CD,EAAAC,GAAzCC,EAAAF,EAAAE,KAA0BC,GAATH,EAAAjB,cAASqB,IAAAJ,GAAA,+BAEnC,OAAAK,KACDH,KAAMA,EAAGrB,GACXoB,GAAIA,EACNpB,IAEJsB,GAEM,SAAAG,EAAyCN,GAAA,IACjCE,EAAqBF,EAAAE,KAAfD,EAAAD,EAAAC,GAEX,OAAAI,KACDxB,MAAOqB,EAAGrB,MAAMoB,EAAGpB,MAEhBmB,uWCjC0BO,GAClBC,kBAAaC,OAAAC,EAAA,EAAAD,EACxBP,KAAcZ,EAAA,EAAiBD,iBACjCY,GAAcX,EAAA,EAAiBV,iBACpBG,cAAQ,kBAEjBC,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0B,SAAA,KAAA3B,EAAAC,EAAAC,cACEC,EAAA,OAAAH,EAAAC,EAAAC,cAEA0B,EAAA,4BACE5B,EAAAC,EAAAC,cAAA,iCAAgCF,EAAAC,EAAAC,cAAA,oBAIlC,2CAAAF,EAAAC,EAAAC,cACA0B,EAAA,4BACqC5B,EAAAC,EAAAC,cAAA,+CACnC,IAAWF,EAAAC,EAAAC,cAAA,oBAIlB,4BACK2B,OAER,8CC7BK,IAAaC,GAElBP,isBCiB0BpB,EAAAsB,OAAAM,EAAA,EAAAN,MAAiDO,GAGrEC,gBAAAC,EAAA,GAHoBT,CAAmD,SAAAU,GAG7E,SAAAC,IAAA,IAAAC,EAyBA,OAzBAC,IAAAC,KAAAH,6DACmBI,kBAAQ,kBAAKH,EAAMI,MAAgBR,gBAwBtD,OAAAI,EACA,OA7B6EK,IAAAN,EAAAD,GAAzCQ,IAAAP,IAAAQ,IAAA,SAAAC,MAAA,WAOzB,OACLC,EAAA7C,EAAAC,cACE6C,EAAA,OAAAD,EAAA7C,EAAAC,cACE6C,EAAA,OAAOD,EAAA7C,EAAAC,cAAA,UACD8C,KAAS,SACJC,UAAQ,QACPC,aAAQ,QACVC,QAAKZ,KAEbC,mBAAKM,EAAA7C,EAAAC,cAAA,QAAYkD,cAGnB,cAAKb,KAAME,MAASrC,MAClB0C,EAAA7C,EAAAC,cAAW6C,EAAA,OAAKR,KAAME,MACrBrC,OAEH,KAAK0C,EAAA7C,EAAAC,cAAA,WAAKqC,KAAME,MAIxBY,gBAEFjB,EA7B6E,CAG1DU,EAAA7C,EAAiBqD,wECvBtCC,EAAAC,SAAkBC,KAAA,SAAAC,QAAA,SAAAC,QAAA,ygCCcXC,EAAA,SAAAzB,GAAA,SAAAyB,IAAA,OAAAtB,IAAAC,KAAAqB,GAAAC,IAAAtB,MAAAqB,EAAAE,WAAAC,IAAAH,IAAAI,MAAAzB,KAAA0B,YAAkB,OAAlBvB,IAAAkB,EAAAzB,GAAAQ,IAAAiB,IAAAhB,IAAA,SAAAC,MAAA,WAEI,OACDC,EAAA7C,EAAAC,cAAA,OAAW+C,UAAGxB,OAAAyC,EAAA,EAAAzC,EAAK0C,EAAAlE,EACrBwD,QAAAX,EAAA7C,EAAAC,cAAOkE,EAAAnE,GACQoE,cAAgC,gCACjCC,aAEZ,mCAAKxB,EAAA7C,EAAAC,cAAA,QAAQqE,QACb,UAAKzB,EAAA7C,EAAAC,cAAA,QACCJ,KAAW,WACR6D,QAIX,6FAAAb,EAAA7C,EAAAC,cACEsE,EAAA,OAEA1B,EAAA7C,EAAAC,cAAA,uCAAA4C,EAAA7C,EAAAC,cAAIsE,EAAA,GAAWvB,UAAIkB,EAAAlE,EACjB0D,SAAAb,EAAA7C,EAAAC,cAAIsE,EAAA,GAAIC,IAAOC,KAAM,GAAWzB,UAAIkB,EAAAlE,EAClCyD,SAAAZ,EAAA7C,EAAAC,cAEFyE,EAAA,SAAA7B,EAAA7C,EAAAC,cAAIsE,EAAA,GAAIC,IAAOC,KACb,IAAA5B,EAAA7C,EAAAC,cACE0E,EAAA,OAAA9B,EAAA7C,EAAAC,cAAM0E,EAAA,GACAC,KAA8B,8BACxBC,UAEZC,EAAA,IAAAjC,EAAA7C,EAAAC,cAAM0E,EAAA,GAAWE,UAO/BE,EAAA,aAnCuBpB,EAAlB,CAA+Bd,EAAA7C,EAC9BqD,WAqCW2B,EAAMxD,OAAAyD,EAAA,IAAAzD,CAAQ8B,EAAR9B,CAAcmC,g3BCrCnBuB,EAAA1D,OAAA2D,EAAA,EAAA3D,CAAW,SAAuB4D,GAAA,OAC5BC,yBAA6B7D,OAAA8D,EAAA,EAAA9D,CAE/C4D,KAHY5D,CAGZ,SAAAU,GAAN,SAAAC,IAAA,IAAAC,EAgCA,OAhCAC,IAAAC,KAAAH,6DACiBoD,gBAAQ,WACrB,GAAgD,OAAxCnD,EAAMI,MAAyB6C,yBAAS,KAAAG,EACTpD,EAAMI,MAA0B6C,yBAAvDI,EAAAD,EAAAC,OAAgBC,EAAAF,EAAAE,aAEvB,OACDlE,OAAAmE,EAAA,EAAAnE,CAAaoE,EAAA,EAAc,SAAAf,GAAA,OAAUA,EAAGjF,KAAY6F,KACpDjE,OAAAmE,EAAA,EAAAnE,CAAQqE,EAAA,EAAcH,GAAS,SAAA3E,GAAA,OAAKA,EAAGnB,KAC3C6F,IAGJ,OACF,GAEArD,EAAW0D,YAAQ,WACV,OAEHC,EAAA/F,EAAAC,cAAA8F,EAAA/F,EAAA0B,SAAA,KAAAqE,EAAA/F,EAAAC,cAAK+F,EAAA,GAAGhF,GAKd,+DAUFoB,EACA,OAjCMK,IAAAN,EAAAD,GAHsBQ,IAAAP,IAAAQ,IAAA,SAAAC,MAAA,WA4BxB,IAAkBqD,EAAO3D,KAA0BiD,kBAChCzF,IAAiBmG,GAAaA,EAAgBnG,cAE1D,OACAiG,EAAA/F,EAAAC,cAAA,WAAgBH,EAACiG,EAAA/F,EAAAC,cAAmBH,EAAA,MAAKwC,KAElDwD,mBAEF3D,EAjCM,CAAa4D,EAAA/F,EAAiBqD,8FClBtCC,EAAAC,SAAkBC,KAAA,SAAA0C,eAAA,QAAAC,WAAA,SAAAC,WAAA,yWCMSC,EAAI,SAAA9F,GAAA,IAAA+F,EAAA/F,EAAMkE,YAAA,IAAA6B,EAAO,GAAAA,EAAqBpF,EAAAqF,IAAAhG,GAAA,gBAAAR,EAAAC,EAAAC,cAAA,OAChD+C,UAAQwD,EAAAxG,EACrBwD,MACEzD,EAAAC,EAAAC,cAAA,MAAAwG,OAASvF,GACC8B,UAAQwD,EAAAxG,EAAgBkG,eAC3BQ,OAAMjC,EACPkC,MAAMlC,EACLmC,QAEP,gBAAO7G,EAAAC,EAAAC,cAAA,UACK+C,UAAQwD,EAAAxG,EAAYmG,WAC5BU,GAAK,KACLC,GAAK,KACNC,EAAK,KACFC,KAAO,OACAC,YAAI,IACCC,iBAItB,0CCvBK,IAA4BC,GACzBC,QAAA7G,GAAaA,EAAA8G,UAEVtH,EAAAC,EAAAC,cAAmBoG,EAAA,MAI9B,KACKiB,MACL,+2BCFWC,EAEPC,MAASC,EAAwBjG,OAAAkG,EAAA,EAAAlG,EAEpC+F,YAFYE,MAKJE,EAAA,SAAAC,GAAA,SAAAD,IAAA,OAAAtF,IAAAC,KAAAqF,GAAA/D,IAAAtB,MAAAqF,EAAA9D,WAAAC,IAAA6D,IAAA5D,MAAAzB,KAAA0B,YAYV,OAZUvB,IAAAkF,EAAAC,GAAAlF,IAAAiF,IAAAhF,IAAA,SAAAC,MAAA,WAEA,OACLC,EAAA7C,EAAAC,cACE4H,EAAA,oBAAAhF,EAAA7C,EAAAC,cAAS6B,EAAA,GAAO2F,MACdA,GAAA5E,EAAA7C,EAAAC,cAAO6H,EAAA,GAASP,QACdA,GAAA1E,EAAA7C,EAAAC,cAKV8H,EAAA,eACDJ,EAZU,CAAa9E,EAAA7C,EAChBgI,eAaOC,EAAQ,WACfzG,OAAA0G,EAAA,OAAA1G,CACJqB,EAAA7C,EAAAC,cAAQ0H,EAAA,MAEAQ,SAAeC,eAE3B,UAE8B,WACpBC,IACVJ,IAUmBK,oeCjDMC,EAAAC,IAAAC,OACEC,EAAA,GACnBC,OAAA,eAAAC,EAAAC,IAAAC,EAAA9I,EAAA+I,KAAa,SAAAC,IAAA,OAAAF,EAAA9I,EAAAiJ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,OAAA,SAAiBC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,uCAAKD,KAAU,SAAAlG,GAAA,OAAOA,EACzDoG,QAAA,wBAAAR,EAAAS,SAAAX,EAAA1G,SAAA,yBAAAsG,EAAA7E,MAAAzB,KAAA0B,YADK,+gBCFqC4F,EAAApB,IAAAC,OAClBC,EAAA,GACnBC,OAAA,eAAAC,EAAAC,IAAAC,EAAA9I,EAAA+I,KAAa,SAAAC,IAAA,OAAAF,EAAA9I,EAAAiJ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,OAAA,SACmBQ,QAAAC,KAAAR,EAAAC,EAAA,GAAAD,EAAAC,EAAA,KAAAC,KAAAF,EAAAG,KAAA,+EAAKD,KAC9B,SAAAlG,GAAA,OAAOA,EAEnByG,4BAAA,wBAAAb,EAAAS,SAAAX,EAAA1G,SAAA,yBAAAsG,EAAA7E,MAAAzB,KAAA0B,YAJK,uICHoBhC,EAAsBR,OAAAwI,EAAA,EAAAxI,CAEhD,2RCwBuByI,GAChBC,SACGC,SACT,MACuB9E,yBACxB,MAEI,SAAgC+E,EAAA7J,GAAA,IAC7BgH,EAAAhH,EAAAgH,QAAA8C,EAAA9J,EACK+J,oBAAA,IAAAD,EACiBJ,EAAAI,EACTE,EAAWC,EAAA,EAErBC,EAAqCC,uCAC7BH,EAASE,EAAsCC,sCAGjE,IAAiBC,GAAoBnJ,OAAAoJ,EAAA,EAAApJ,CAAW+F,IAiBhD,OACOE,MAhBkBjG,OAAAgJ,EAAA,EAAAhJ,CAChBqJ,EAAA,EACKP,EACIC,EAAiBC,EAAA,EAAAzG,WAAA,EACjC4G,KAaYL,eACDK,cAGfpD,kICtCM,SAAAuD,EACG/H,GAEP,OAAO,SAAwCgI,GAAA,OAjB3C,SACGhI,EAC4BgI,GAEnC,OACMhI,OAGRgI,WAUgBC,CAAQjI,EACxBgI,IAOM,SAAAE,EACiCC,EACVC,GAE3B,OAAO,SAAqB/F,EAAoBgG,GAC9C,IAAaC,EAA0CH,EAAOE,EAAOrI,MACrE,YAAyBhB,IAAdsJ,EACKA,EAAMjG,EAAUgG,QAETrJ,IAAdqD,EACMA,EAIjB+F,GAwBI,SAAAG,EACiBF,EACdrI,GAEP,OAAWA,IAAWqI,EACxBrI,uWC/EiBwI,GACSlG,0DACxB,GAEkBgG,EAAA7J,OAAAgK,EAAA,EAAAhK,CAAAJ,OACJmK,GACPrB,QACNuB,EAAA,uKCVyCC,EAAAlK,OAAAwI,EAAA,EAAAxI,EAIVmK,+BAAE,SAAMvG,EAAYgG,GAChD,OAAkB5J,OAAAwI,EAAA,EAAAxI,CAAO4J,EAAmC,kCAC7CA,EAASL,QAI1B3F,IAGF,MAEsCwG,EAAG,SAAsBxG,GAAA,OAC1DA,EAA0BC","file":"main.a2fce022eeefd220b6d3.js","sourcesContent":["import React from 'react';\n\nimport { ArchitecturalComponent } from 'app/types';\nimport { AcDocumentation } from 'components/AcDocumentation/AcDocumentation';\n\nexport const browserComponent: ArchitecturalComponent = {\n  id: 'browser',\n  name: 'Browser',\n  Documentation: () => {\n    return (\n      <AcDocumentation title=\"Web browser\">\n        <p>\n          If the browser has cache of the content, it will return it right away\n          to the visitor.\n        </p>\n\n        <p>\n          If the browser does not have a cache of the content, it will hit{' '}\n          <code>https:{'//'}hollowverse.com</code>, which points to the [NAME OF\n          CLOUDFRONT DISTRIBUTION], which serves the <code>index.html</code>.\n        </p>\n\n        <p>\n          Once the browser has <code>index.html</code>, it will:\n        </p>\n\n        <ul>\n          <li>\n            Download the static content from [NAME OF CLOUDFRONT DISTRIBUTION]\n            which serves the static assets\n          </li>\n\n          <li>\n            Send a request to <code>https:{'//'}api.hollowverse.com</code>\n          </li>\n        </ul>\n      </AcDocumentation>\n    );\n  },\n};\n","import React from 'react';\n\nimport { ArchitecturalComponent } from 'app/types';\nimport { AcDocumentation } from 'components/AcDocumentation/AcDocumentation';\n\nexport const visitorComponent: ArchitecturalComponent = {\n  id: 'visitor',\n  name: 'Visitor',\n  Documentation: () => {\n    return (\n      <AcDocumentation title=\"Hollowverse visitor\">\n        The visitor will type <code>http:{'//'}hollowverse.com</code> into their\n        browser to visit Hollowverse\n      </AcDocumentation>\n    );\n  },\n};\n","import { browserComponent } from './browserComponent';\nimport { visitorComponent } from './visitorComponent';\n\nexport const componentMap = {\n  browserComponent,\n  visitorComponent,\n};\n","import { ArchitecturalComponent, Link } from '../types';\nimport vis from 'vis';\n\nexport const colors = {\n  blue: '#0074D9',\n  green: '#2ECC40',\n};\n\nexport function convertToVisNode({\n  name,\n  id,\n}: ArchitecturalComponent): vis.NodeOptions {\n  return {\n    id: id,\n    label: name,\n    borderWidth: 0,\n    borderWidthSelected: 1,\n    color: {\n      background: 'white',\n      highlight: '#DDDDDD',\n    },\n  };\n}\n\nexport function convertToVisEdge(link: Link): vis.EdgeOptions {\n  const { to, from, Documentation, ...rest } = link as any; // TODO: fix typing\n\n  return {\n    from: from.id,\n    to: to.id,\n    ...rest,\n  };\n}\n\nexport function enhanceLink(link: Partial<Link>): Link {\n  const { from, to } = link as any; // TODO: fix typing\n\n  return {\n    id: `${from.id}-${to.id}`,\n    ...link,\n  } as any; // TODO: fix typing\n}\n","import React from 'react';\nimport { CardTitle } from 'reactstrap';\n\nimport { componentMap } from 'architecturalComponents/componentMap';\nimport { enhanceLink } from 'architecturalComponents/helpers';\nimport { AcDocumentation } from 'components/AcDocumentation/AcDocumentation';\n\nexport const visitorRequestProcessing = {\n  'visitor-browser': enhanceLink({\n    from: componentMap.visitorComponent,\n    to: componentMap.browserComponent,\n    Documentation: () => (\n      <>\n        <AcDocumentation>\n          <CardTitle>Visitor → Browser</CardTitle>\n\n          <p>\n            The visitor requests <code>http:{'//'}hollowverse.com</code> in the\n            browser\n          </p>\n\n          <CardTitle>Visitor ← Browser</CardTitle>\n          <p>\n            The browser displays the content of{' '}\n            <code>http:{'//'}hollowverse.com</code>\n          </p>\n        </AcDocumentation>\n      </>\n    ),\n    arrows: 'to, from',\n  }),\n};\n","import { visitorRequestProcessing } from 'architecturalComponents/visitorRequestProcessingLinks';\n\nexport const linkMap = {\n  visitorRequestProcessing,\n};\n","/* React Component for Architectural Component Documentation */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Card, CardTitle, CardBody } from 'reactstrap';\n\nimport { setSelectedItem } from 'store/actions';\nimport { ActionTypeToPayloadType } from 'store/types';\n// import closeSvg from '!!url-loader!assets/close.svg';\n\ntype DispatchProps = {\n  setSelectedItem(\n    payload: ActionTypeToPayloadType['SET_SELECTED_ARCHITECTURE_ITEM'] | null,\n  ): any;\n};\n\ntype OwnProps = {\n  title?: string;\n};\n\ntype Props = OwnProps & DispatchProps;\n\nexport const AcDocumentation = connect<{}, DispatchProps, OwnProps>(undefined, {\n  setSelectedItem,\n})(\n  class extends React.Component<Props> {\n    handleCloseButton = () => this.props.setSelectedItem(null);\n\n    render() {\n      return (\n        <Card>\n          <CardBody>\n            <button\n              type=\"button\"\n              className=\"close\"\n              aria-label=\"Close\"\n              onClick={this.handleCloseButton}\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n\n            {this.props.title ? (\n              <CardTitle>{this.props.title}</CardTitle>\n            ) : null}\n\n            <div>{this.props.children}</div>\n          </CardBody>\n        </Card>\n      );\n    }\n  },\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"_1nQLe\",\"leftNav\":\"_3mlWC\",\"content\":\"_162Y9\"};","// TODO: fix disabled rule below\n/* eslint-disable react/jsx-max-depth */\nimport React from 'react';\nimport { hot } from 'react-hot-loader';\nimport cc from 'classcat';\nimport Helmet from 'react-helmet-async';\nimport { Route, Switch } from 'react-router';\n\nimport { LoadableHome } from 'pages/Home/LoadableHome';\nimport { LoadableVisitorRequestProcessing } from 'pages/VisitorRequestProcessing/LoadableVisitorRequestProcessing';\nimport { Container, Row, Col } from 'reactstrap';\nimport { LeftNav } from 'components/LeftNav/LeftNav';\n\nimport css from './App.module.scss';\n\nexport const App = class extends React.Component {\n  render() {\n    return (\n      <div className={cc([css.root])}>\n        <Helmet\n          titleTemplate=\"%s - Hollowverse Architecture\"\n          defaultTitle=\"The architecture of Hollowverse\"\n        >\n          <meta charSet=\"utf-8\" />\n          <meta\n            name=\"viewport\"\n            content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0, shrink-to-fit=no\"\n          />\n        </Helmet>\n\n        <Container>\n          <h1>Hollowverse Architectures</h1>\n\n          <Row className={css.content}>\n            <Col sm={{ size: 4 }} className={css.leftNav}>\n              <LeftNav />\n            </Col>\n            <Col sm={{ size: 8 }}>\n              <Switch>\n                <Route\n                  path=\"/visitor-request-processing\"\n                  component={LoadableVisitorRequestProcessing}\n                />\n                <Route component={LoadableHome} />\n              </Switch>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n};\n\nexport const HotApp = hot(module)(App);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { find } from 'lodash';\nimport { Link } from 'react-router-dom';\n\nimport { StoreState, ActionTypeToPayloadType } from 'store/types';\nimport { getSelectedArchitectureItem } from 'store/reducers';\nimport { componentMap } from 'architecturalComponents/componentMap';\nimport { linkMap } from 'architecturalComponents/linkMap';\n\ntype Props = {\n  selectedArchitectureItem:\n    | ActionTypeToPayloadType['SET_SELECTED_ARCHITECTURE_ITEM']\n    | null;\n};\n\nexport const LeftNav = connect((state: StoreState) => ({\n  selectedArchitectureItem: getSelectedArchitectureItem(state),\n}))(\n  class extends React.Component<Props> {\n    getSelectedItem = () => {\n      if (this.props.selectedArchitectureItem !== null) {\n        const { itemId, architecture } = this.props.selectedArchitectureItem;\n\n        return (\n          find(componentMap, component => component.id === itemId) ||\n          find(linkMap[architecture], link => link.id === itemId)\n        );\n      }\n\n      return false;\n    };\n\n    renderLinks = () => {\n      return (\n        <>\n          <Link to=\"/visitor-request-processing\">\n            Visitor request processing\n          </Link>\n        </>\n      );\n    };\n\n    render() {\n      const selectedItem = this.getSelectedItem() as any; // TODO: fix typing\n      const Documentation = selectedItem ? selectedItem.Documentation : false;\n\n      return (\n        <div>{Documentation ? <Documentation /> : this.renderLinks()}</div>\n      );\n    }\n  },\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"_2tUeQ\",\"loaderCircular\":\"asZ_p\",\"loaderPath\":\"_1d4zb\",\"loaderDash\":\"YiVDO\"};","import React from 'react';\nimport classes from './LoadingSpinner.module.scss';\n\ntype Props = {\n  size?: number;\n} & React.HTMLAttributes<SVGElement>;\n\nexport const LoadingSpinner = ({ size = 50, ...rest }: Props) => (\n  <div className={classes.root}>\n    <svg\n      {...rest}\n      className={classes.loaderCircular}\n      height={size}\n      width={size}\n      viewBox=\"25 25 50 50\"\n    >\n      <circle\n        className={classes.loaderPath}\n        cx=\"50\"\n        cy=\"50\"\n        r=\"20\"\n        fill=\"none\"\n        strokeWidth=\"3\"\n        strokeMiterlimit=\"10\"\n      />\n    </svg>\n  </div>\n);\n","import React from 'react';\nimport { LoadingSpinner } from 'components/LoadingSpinner/LoadingSpinner';\nimport { CommonOptions } from 'react-loadable';\n\nexport const loadableDefaultOptions: CommonOptions = {\n  loading({ pastDelay }) {\n    if (pastDelay) {\n      return <LoadingSpinner />;\n    }\n\n    return null;\n  },\n  delay: 200,\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter as Router } from 'react-router-redux';\nimport domready from 'domready';\nimport { render } from 'react-dom';\nimport createBrowserHistory from 'history/createBrowserHistory';\n\nimport { HotApp as App } from 'components/App/App';\nimport { createConfiguredStore } from 'store/createConfiguredStore';\nimport { HelmetProvider } from 'react-helmet-async';\n\nconst history = createBrowserHistory();\n\nconst { store } = createConfiguredStore({\n  history,\n});\n\n// This has to be a class in order for hot module replacement to work\nclass Root extends React.PureComponent {\n  render() {\n    return (\n      <HelmetProvider>\n        <Provider store={store}>\n          <Router history={history}>\n            <App />\n          </Router>\n        </Provider>\n      </HelmetProvider>\n    );\n  }\n}\n\nconst renderApp = () => {\n  render(\n    <Root />,\n    // tslint:disable-next-line:no-non-null-assertion\n    document.getElementById('app')!,\n  );\n};\n\nconst renderOnDomReady = () => {\n  domready(renderApp);\n};\n\ndeclare const module: {\n  hot?: { accept(path?: string, cb?: () => void): void };\n};\n\nif (module.hot) {\n  module.hot.accept();\n}\n\nrenderOnDomReady();\n","import loadable from 'react-loadable';\nimport { loadableDefaultOptions } from 'helpers/loadableDefaultOptions';\n\nexport const LoadableHome = loadable({\n  ...loadableDefaultOptions,\n  loader: async () => import('./Home').then(module => module.Home),\n});\n","import loadable from 'react-loadable';\nimport { loadableDefaultOptions } from 'helpers/loadableDefaultOptions';\n\nexport const LoadableVisitorRequestProcessing = loadable({\n  ...loadableDefaultOptions,\n  loader: async () =>\n    import('./VisitorRequestProcessing').then(\n      module => module.VisitorRequestProcessing,\n    ),\n});\n","import { createActionCreator } from 'store/helpers';\n\nexport const setSelectedItem = createActionCreator(\n  'SET_SELECTED_ARCHITECTURE_ITEM',\n);\n","import { routerMiddleware } from 'react-router-redux';\nimport { History } from 'history';\nimport { createStore, applyMiddleware, compose, Middleware } from 'redux';\n\nimport { reducer } from './reducer';\nimport { StoreState } from './types';\n\ndeclare const global: NodeJS.Global & {\n  /**\n   * Added by Redux DevTools extension for Chrome and Firefox\n   * See https://github.com/zalmoxisus/redux-devtools-extension\n   */\n  __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: typeof compose | undefined;\n};\n\nexport type CreateConfiguredStoreOptions = {\n  history: History;\n  initialState?: any;\n  additionalMiddleware?: Middleware[];\n};\n\n// Added by Webpack\ndeclare const module: {\n  hot?: {\n    accept(path?: string, cb?: () => void): void;\n  };\n};\n\nconst defaultInitialState: StoreState = {\n  routing: {\n    location: null,\n  },\n  selectedArchitectureItem: null,\n};\n\nexport function createConfiguredStore({\n  history,\n  initialState = defaultInitialState,\n}: CreateConfiguredStoreOptions) {\n  let composeEnhancers = compose;\n\n  if (global.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n    composeEnhancers = global.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n  }\n\n  const middlewares = [routerMiddleware(history)];\n\n  const store = createStore(\n    reducer,\n    initialState,\n    composeEnhancers(applyMiddleware(...middlewares)),\n  );\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('./reducer', () => {\n      // tslint:disable-next-line no-require-imports\n      const nextRootReducer = require('./reducer').reducer;\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return {\n    store,\n    initialState,\n    middlewares,\n    history,\n  };\n}\n","import {\n  Action,\n  ActionType,\n  ActionCreator,\n  ActionToReducerMap,\n  AppState,\n  StoreKey,\n  ActionTypeToPayloadType,\n  Reducer,\n  GenericAction,\n} from 'store/types';\n\n/**\n * A helper function that creates an action of a specific type,\n * the payload must correspond to the action type.\n */\nexport function createAction<T extends ActionType>(\n  type: T,\n  payload: ActionTypeToPayloadType[T],\n): Action<T> {\n  return {\n    type,\n    payload,\n  };\n}\n\n/** A better typed version of `redux-action`'s `createAction`.\n * It only accepts valid action types and returns an action creator\n * that only accept valid payloads matching that type.\n */\nexport function createActionCreator<T extends ActionType>(\n  type: T,\n): ActionCreator<T> {\n  return (payload: ActionTypeToPayloadType[T]) =>\n    createAction<T>(type, payload);\n}\n\n/**\n * A better typed version of `redux-action`'s `handleActions`.\n * It requires that the map keys are store keys and that the return\n * type of the reducer matches the state of that store key.\n */\nexport function createReducerForStoreKey<Key extends StoreKey>(\n  map: Partial<ActionToReducerMap<Key>>,\n  defaultState: AppState[Key],\n): Reducer<AppState[Key]> {\n  return (state: AppState[Key], action: Action) => {\n    const reducer: Reducer<AppState[Key]> | undefined = map[action.type];\n    if (reducer !== undefined) {\n      return reducer(state, action);\n    }\n    if (state !== undefined) {\n      return state;\n    }\n\n    return defaultState;\n  };\n}\n\n/**\n * Type guard for actions\n * It allows TypeScript to guarantee that an action is of a specific type,\n * providing better autocomplete suggestions and type checking in control flow.\n *\n * Here is an example:\n *\n * ```\n * const action = {\n *  type: 'REQUEST_LOGIN',\n *  payload: {\n *    email: 'email@example.com',\n *    password: '123456',\n *  }\n * };\n * if (isActionOfType(action, 'REQUEST_LOGIN')) {\n *  const { payload } = action;\n *  payload.email // <-- TypeScript now knows that the payload has an `email` property.\n * }\n * ```\n */\nexport function isActionOfType<T extends ActionType>(\n  action: GenericAction,\n  type: T,\n): action is Action<T> {\n  return type === action.type;\n}\n\n/**\n * Creates a reducer that handles a single action for an individual state entry.\n * It sets the action payload as the value of that state entry.\n */\nexport function handleAction<\n  K extends keyof S,\n  S extends AppState = AppState,\n  A extends ActionType = ActionType\n>(actionType: A) {\n  return (state: S[K], action: Action<A>): S[K] => {\n    if (isActionOfType(action, actionType)) {\n      // @ts-ignore\n      return action.payload;\n    }\n\n    return state;\n  };\n}\n","import { routerReducer } from 'react-router-redux';\nimport { combineReducers } from 'redux';\nimport { StoreState, ReducerMap } from './types';\n\nimport { selectedArchitectureItemReducer } from 'store/reducers';\n\nconst appReducers: ReducerMap = {\n  selectedArchitectureItem: selectedArchitectureItemReducer,\n};\n\nexport const reducer = combineReducers<StoreState>({\n  ...appReducers,\n  routing: routerReducer,\n});\n","import { createReducerForStoreKey, isActionOfType } from 'store/helpers';\nimport { StoreState } from 'store/types';\n\nexport const selectedArchitectureItemReducer = createReducerForStoreKey<\n  'selectedArchitectureItem'\n>(\n  {\n    SET_SELECTED_ARCHITECTURE_ITEM: (state, action) => {\n      if (isActionOfType(action, 'SET_SELECTED_ARCHITECTURE_ITEM')) {\n        return action.payload;\n      }\n\n      return state;\n    },\n  },\n  null,\n);\n\nexport const getSelectedArchitectureItem = (state: StoreState) =>\n  state.selectedArchitectureItem;\n"],"sourceRoot":""}