{"version":3,"sources":["webpack:///./src/app/components/Architecture/Architecture.tsx","webpack:///./src/app/pages/VisitorRequestProcessing/VisitorRequestProcessing.tsx"],"names":["Architecture","Object","react_redux__WEBPACK_IMPORTED_MODULE_9__","state","selectedArchitectureItem","store_reducers__WEBPACK_IMPORTED_MODULE_11__","_React$Component","ArchitectureClass","_this","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default","this","container","network","getOptions","autoResize","clickToUse","width","height","getSelectedNode","props","components","map","architecturalComponents_helpers__WEBPACK_IMPORTED_MODULE_10__","find","_ref","id","itemId","getSelectedEdge","links","_ref2","setContainerRef","ref","_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default","_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default","key","value","nextProps","lodash_isEqual__WEBPACK_IMPORTED_MODULE_5__","selectedNode","selectedEdge","setSelection","nodes","edges","unselectAll","createArchitecture","vis__WEBPACK_IMPORTED_MODULE_7___default","a","DataSet","add","data","Network","on","params","_nodes","_edges","length","onClick","react__WEBPACK_IMPORTED_MODULE_6___default","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_8__","className","_Architecture_module_scss__WEBPACK_IMPORTED_MODULE_12___default","root","style","content","Component","visitorComponent","architecturalComponents_componentMap__WEBPACK_IMPORTED_MODULE_9__","browserComponent","visitorBrowserLink","architecturalComponents_linkMap__WEBPACK_IMPORTED_MODULE_10__","visitorRequestProcessing","VisitorRequestProcessingClass","_React$PureComponent","handleClick","setSelectedItem","architecture","react__WEBPACK_IMPORTED_MODULE_5___default","components_Architecture_Architecture__WEBPACK_IMPORTED_MODULE_8__","PureComponent","VisitorRequestProcessing","react_hot_loader__WEBPACK_IMPORTED_MODULE_6__","module","react_redux__WEBPACK_IMPORTED_MODULE_7__","undefined","store_actions__WEBPACK_IMPORTED_MODULE_11__"],"mappings":"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","file":"2.afe8f91c917b57295220.js","sourcesContent":["import React from 'react';\nimport vis from 'vis';\nimport { Card } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { isEqual } from 'lodash';\n\nimport {\n  convertToVisNode,\n  convertToVisEdge,\n} from 'architecturalComponents/helpers';\nimport { ArchitecturalComponent, Link } from 'app/types';\nimport { getSelectedArchitectureItem } from 'store/reducers';\nimport { StoreState, ActionTypeToPayloadType } from 'store/types';\n\nimport css from './Architecture.module.scss';\n\ntype StoreProps = {\n  selectedArchitectureItem:\n    | ActionTypeToPayloadType['SET_SELECTED_ARCHITECTURE_ITEM']\n    | null;\n};\n\ntype OwnProps = {\n  components: ArchitecturalComponent[];\n  links: Link[];\n  onClick(itemId: string): any;\n};\n\ntype Props = OwnProps & StoreProps;\n\nexport const Architecture = connect<StoreProps, null, OwnProps, StoreState>(\n  (state: StoreState) => ({\n    selectedArchitectureItem: getSelectedArchitectureItem(state),\n  }),\n)(\n  class ArchitectureClass extends React.Component<Props> {\n    container: HTMLDivElement | null = null;\n    network: vis.Network | null = null;\n\n    getOptions = (): vis.Options => ({\n      autoResize: true,\n      clickToUse: true,\n      width: '100%',\n      height: '100%',\n    });\n\n    componentWillReceiveProps(nextProps: Props) {\n      if (\n        !isEqual(\n          this.props.selectedArchitectureItem,\n          nextProps.selectedArchitectureItem,\n        ) &&\n        this.network !== null\n      ) {\n        if (nextProps.selectedArchitectureItem) {\n          const selectedNode = this.getSelectedNode(nextProps);\n          const selectedEdge = this.getSelectedEdge(nextProps);\n\n          this.network.setSelection({\n            nodes: selectedNode ? [selectedNode.id as string] : [],\n            edges: selectedEdge ? [selectedEdge.id as string] : [],\n          });\n        } else {\n          this.network.unselectAll();\n        }\n      }\n    }\n\n    componentDidMount() {\n      this.createArchitecture(this.props);\n    }\n\n    getSelectedNode = (props: Props) => {\n      return props.components\n        .map(convertToVisNode)\n        .find(\n          ({ id }) =>\n            props.selectedArchitectureItem !== null &&\n            props.selectedArchitectureItem.itemId === id,\n        );\n    };\n\n    getSelectedEdge = (props: Props) => {\n      return props.links\n        .map(convertToVisEdge)\n        .find(\n          ({ id }) =>\n            props.selectedArchitectureItem !== null &&\n            props.selectedArchitectureItem.itemId === id,\n        );\n    };\n\n    createArchitecture(props: Props) {\n      const nodes = new vis.DataSet();\n      const edges = new vis.DataSet();\n\n      nodes.add(props.components.map(convertToVisNode));\n      edges.add(props.links.map(convertToVisEdge));\n\n      const data = {\n        nodes: nodes,\n        edges: edges,\n      };\n\n      // tslint:disable-next-line:no-non-null-assertion no-unused-expression\n      this.network = new vis.Network(this.container!, data, {});\n\n      this.network.on('click', params => {\n        const { nodes: _nodes, edges: _edges } = params;\n\n        const itemId =\n          _nodes.length > 0 ? _nodes[0] : _edges.length > 0 ? _edges[0] : null;\n\n        props.onClick(itemId);\n      });\n    }\n\n    setContainerRef = (ref: any) => {\n      this.container = ref;\n    };\n\n    render() {\n      return (\n        <Card className={css.root}>\n          <div\n            style={{ height: this.props.components.length * 100 }}\n            className={css.content}\n            ref={this.setContainerRef}\n          />\n        </Card>\n      );\n    }\n  },\n);\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { connect } from 'react-redux';\n\nimport { Architecture } from 'components/Architecture/Architecture';\nimport { componentMap } from 'architecturalComponents/componentMap';\nimport { linkMap } from 'architecturalComponents/linkMap';\nimport { setSelectedItem } from 'store/actions';\nimport { Link } from 'app/types';\n\nconst { visitorComponent, browserComponent } = componentMap;\n\nconst visitorBrowserLink = linkMap.visitorRequestProcessing['visitor-browser'];\n\nclass VisitorRequestProcessingClass extends React.PureComponent<{\n  setSelectedItem(selectedItem: any): any;\n}> {\n  components = [visitorComponent, browserComponent];\n\n  links: Link[] = [visitorBrowserLink];\n\n  handleClick = (itemId: string) => {\n    this.props.setSelectedItem({\n      architecture: 'visitorRequestProcessing',\n      itemId,\n    });\n  };\n\n  render() {\n    return (\n      <Architecture\n        components={this.components}\n        links={this.links}\n        onClick={this.handleClick}\n      />\n    );\n  }\n}\n\nexport const VisitorRequestProcessing = hot(module)(\n  connect(undefined, { setSelectedItem })(VisitorRequestProcessingClass),\n);\n"],"sourceRoot":""}